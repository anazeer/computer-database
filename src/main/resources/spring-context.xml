<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/jee
		http://www.springframework.org/schema/jee/spring-jee-4.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-4.2.xsd">

	<!-- Inject services -->
	<bean id="companyService" class="com.excilys.cdb.service.implementation.CompanyService" />
	<bean id="computerService" class="com.excilys.cdb.service.implementation.ComputerService" />

	<!-- Inject mappers -->
	<bean id="companyMapper" class="com.excilys.cdb.mapper.implementation.CompanyMapper" />
	<bean id="computerMapper" class="com.excilys.cdb.mapper.implementation.ComputerMapper" />

	<!-- Inject DAOs -->
	<bean id="companyDAO"
		class="com.excilys.cdb.persistence.dao.implementation.CompanyDAO" />
	<bean id="computerDAO"
		class="com.excilys.cdb.persistence.dao.implementation.ComputerDAO" />

	<!-- Scans within the packages of the application for @Component classes 
		to configure as beans -->
	<context:annotation-config />
	<context:component-scan base-package="com.excilys.cdb.service.implementation" />
	<context:component-scan base-package="com.excilys.cdb.ui" />
	<context:component-scan base-package="com.excilys.cdb.pagination.implementation" />
	<context:component-scan
		base-package="com.excilys.cdb.persistence.dao.implementation" />
	<context:component-scan base-package="com.excilys.cdb.mapper.implementation" />

	<!-- Use the JDBC properties file for the data source -->
	<context:property-placeholder location="classpath:dbconf.properties" />

	<!-- Data source initialization -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<property name="poolName" value="springHikariCP" />
		<property name="connectionTestQuery" value="SELECT 1" />
		<!-- Data source connection parameters -->
		<property name="driverClassName" value="${db.driver}" />
		<property name="jdbcUrl" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<!-- Data source size and times -->
		<property name="maximumPoolSize" value="${db.maximumPoolSize}" />
		<property name="idleTimeout" value="${db.idleTimeout}" />
		<property name="maxLifetime" value="${db.maxLifeTime}" />
		<!-- Data source cache -->
		<property name="dataSourceProperties">
			<props>
				<prop key="prepStmtCacheSize">250</prop>
				<prop key="prepStmtCacheSqlLimit">2048</prop>
				<prop key="cachePrepStmts">true</prop>
				<prop key="useServerPrepStmts">true</prop>
			</props>
		</property>
	</bean>

	<!-- Hibernate session factory. Reference the data source and the annoted 
		classes -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.excilys.cdb.model" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.id.new_generator_mappings">false</prop>
			</props>
		</property>
	</bean>

	<!-- Apply lazy connection to the data source to optimize empty transaction -->
	<bean name="lazyConnectionDataSourceProxy"
		class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
		<property name="targetDataSource" ref="dataSource" />
	</bean>

	<!-- Initialize transaction management -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory">
	</bean>

	<!-- Enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven proxy-target-class="true"
		transaction-manager="transactionManager" />

	<!-- Enable i18n (internationalization), with messages_{locale}.properties 
		type files -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

</beans>